plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
        id 'idea'
}

idea {
	module {
		downloadSources = true
	}
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven { url = "https://maven.shedaniel.me/" } // REI
	//maven { url = "https://maven.blamejared.com/" } // JEI
	maven { url = "https://api.modrinth.com/maven" } // for JEI, temporary workaround to fix mappings issue
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "modid" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Uncomment the following line to enable the deprecated Fabric API modules.
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"

	modCompileOnly ("me.shedaniel.cloth:basic-math:0.6.1")
	modCompileOnly ("me.shedaniel.cloth:cloth-config-fabric:15.0.127")
	modCompileOnly "dev.architectury:architectury-neoforge:13.0.1"
	modCompileOnly ("me.shedaniel:RoughlyEnoughItems-api-fabric:$rei_version")
	modRuntimeOnly ("me.shedaniel:RoughlyEnoughItems-fabric:$rei_version")

	//modCompileOnly("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
	//modCompileOnly("mezz.jei:jei-${minecraft_version}-fabric-api:${jei_version}")
	//modRuntimeOnly("mezz.jei:jei-${minecraft_version}-fabric:${jei_version}")
	modImplementation("maven.modrinth:jei:ENnncZW9")

	include modApi("teamreborn:energy:$reborn_energy_version") {
		exclude(group: "net.fabricmc.fabric-api")
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
	options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
