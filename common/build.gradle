architectury {
    common rootProject.enabled_platforms.split(',')
}

dependencies {
    // We depend on Fabric Loader here to use the Fabric @Environment annotations,
    // which get remapped to the correct annotations on each platform.
    // Do NOT use other classes from Fabric Loader.
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"

    compileOnly "org.spongepowered:mixin:0.8.5"
    // fabric and neoforge both bundle mixinextras, so it is safe to use it in common
    compileOnly "io.github.llamalad7:mixinextras-common:0.3.5"
    annotationProcessor "io.github.llamalad7:mixinextras-common:0.3.5"

    // modCompileOnly "me.shedaniel.cloth:cloth-config:${cloth_config_version}"
    modCompileOnly "dev.architectury:architectury:${architectury_version}"

    compileOnly("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    testCompileOnly("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")

    compileOnly("dev.emi:emi-xplat-mojmap:${emi_version}:api")
    testCompileOnly("dev.emi:emi-xplat-mojmap:${emi_version}:api")

    modCompileOnly("dev.isxander:yet-another-config-lib:${yacl_version}-fabric")
}

sourceSets {
    main {
        resources.srcDir "src/generated"
        resources.exclude ".cache"
    }
}
