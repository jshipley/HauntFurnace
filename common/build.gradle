architectury {
    common rootProject.enabled_platforms.split(',')
}

dependencies {
    // We depend on Fabric Loader here to use the Fabric @Environment annotations,
    // which get remapped to the correct annotations on each platform.
    // Do NOT use other classes from Fabric Loader.
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

    compileOnly group: 'org.spongepowered', name: 'mixin', version: '0.8.5'
    // fabric and neoforge both bundle mixinextras, so it is safe to use it in common
    compileOnly group: 'io.github.llamalad7', name: 'mixinextras-common', version: '0.3.5'
    annotationProcessor group: 'io.github.llamalad7', name: 'mixinextras-common', version: '0.3.5'

    modCompileOnly ("me.shedaniel.cloth:cloth-config:$cloth_config_version")
    modCompileOnly ("dev.architectury:architectury:$architectury_version")

    // compileOnly("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    // testCompileOnly("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")

    // compileOnly("dev.emi:emi-xplat-mojmap:${emi_version}:api")
    // testCompileOnly("dev.emi:emi-xplat-mojmap:${emi_version}:api")
}

loom {
    accessWidenerPath = file("src/main/resources/hauntfurnace.accesswidener")
}

sourceSets {
    main {
        java {
            srcDir "src"
            exclude "**/jei/**"
            exclude "**/emi/**"
            exclude "**/Powered*.java"
        }
        resources.srcDir "src/generated"
        resources.exclude ".cache"
    }
}
